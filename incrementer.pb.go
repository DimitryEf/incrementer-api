// Code generated by protoc-gen-go. DO NOT EDIT.
// source: incrementer.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	MaximumValue         int64    `protobuf:"varint,1,opt,name=maximum_value,json=maximumValue,proto3" json:"maximum_value,omitempty"`
	StepValue            int64    `protobuf:"varint,2,opt,name=step_value,json=stepValue,proto3" json:"step_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_038dd27a5df9b4c5, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMaximumValue() int64 {
	if m != nil {
		return m.MaximumValue
	}
	return 0
}

func (m *Request) GetStepValue() int64 {
	if m != nil {
		return m.StepValue
	}
	return 0
}

type Response struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_038dd27a5df9b4c5, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "incrementer.Request")
	proto.RegisterType((*Response)(nil), "incrementer.Response")
}

func init() {
	proto.RegisterFile("incrementer.proto", fileDescriptor_038dd27a5df9b4c5)
}

var fileDescriptor_038dd27a5df9b4c5 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcc, 0xcc, 0x4b, 0x2e,
	0x4a, 0xcd, 0x4d, 0xcd, 0x2b, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0xf2, 0xe5, 0x62, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x52, 0xe6, 0xe2,
	0xcd, 0x4d, 0xac, 0xc8, 0xcc, 0x2d, 0xcd, 0x8d, 0x2f, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x54,
	0x60, 0xd4, 0x60, 0x0e, 0xe2, 0x81, 0x0a, 0x86, 0x81, 0xc4, 0x84, 0x64, 0xb9, 0xb8, 0x8a, 0x4b,
	0x52, 0x0b, 0xa0, 0x2a, 0x98, 0xc0, 0x2a, 0x38, 0x41, 0x22, 0x60, 0x69, 0x25, 0x19, 0x2e, 0x8e,
	0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x01, 0x2e, 0xe6, 0xbc, 0xd2, 0x5c, 0xa8,
	0x29, 0x20, 0xa6, 0xd1, 0x71, 0x46, 0x2e, 0x6e, 0x4f, 0x84, 0xe5, 0x42, 0x56, 0x5c, 0x9c, 0xee,
	0xa9, 0x25, 0x7e, 0xa5, 0xb9, 0x49, 0xa9, 0x45, 0x42, 0x22, 0x7a, 0xc8, 0x4e, 0x85, 0x3a, 0x4a,
	0x4a, 0x14, 0x4d, 0x14, 0x62, 0xb6, 0x12, 0x83, 0x90, 0x03, 0x17, 0x3f, 0xdc, 0x28, 0xf2, 0x4c,
	0xb0, 0xe2, 0xe2, 0x0c, 0x4e, 0x2d, 0x09, 0x48, 0x2c, 0x4a, 0xcc, 0x2d, 0x26, 0x51, 0x6f, 0x12,
	0x1b, 0x38, 0x28, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x18, 0x5d, 0xf7, 0xd4, 0x5f, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IncrementerClient is the client API for Incrementer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IncrementerClient interface {
	GetNumber(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	IncrementNumber(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	SetParams(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type incrementerClient struct {
	cc grpc.ClientConnInterface
}

func NewIncrementerClient(cc grpc.ClientConnInterface) IncrementerClient {
	return &incrementerClient{cc}
}

func (c *incrementerClient) GetNumber(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/incrementer.Incrementer/GetNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incrementerClient) IncrementNumber(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/incrementer.Incrementer/IncrementNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incrementerClient) SetParams(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/incrementer.Incrementer/SetParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IncrementerServer is the server API for Incrementer service.
type IncrementerServer interface {
	GetNumber(context.Context, *Request) (*Response, error)
	IncrementNumber(context.Context, *Request) (*Response, error)
	SetParams(context.Context, *Request) (*Response, error)
}

// UnimplementedIncrementerServer can be embedded to have forward compatible implementations.
type UnimplementedIncrementerServer struct {
}

func (*UnimplementedIncrementerServer) GetNumber(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNumber not implemented")
}
func (*UnimplementedIncrementerServer) IncrementNumber(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncrementNumber not implemented")
}
func (*UnimplementedIncrementerServer) SetParams(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetParams not implemented")
}

func RegisterIncrementerServer(s *grpc.Server, srv IncrementerServer) {
	s.RegisterService(&_Incrementer_serviceDesc, srv)
}

func _Incrementer_GetNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncrementerServer).GetNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/incrementer.Incrementer/GetNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncrementerServer).GetNumber(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Incrementer_IncrementNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncrementerServer).IncrementNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/incrementer.Incrementer/IncrementNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncrementerServer).IncrementNumber(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Incrementer_SetParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncrementerServer).SetParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/incrementer.Incrementer/SetParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncrementerServer).SetParams(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Incrementer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "incrementer.Incrementer",
	HandlerType: (*IncrementerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNumber",
			Handler:    _Incrementer_GetNumber_Handler,
		},
		{
			MethodName: "IncrementNumber",
			Handler:    _Incrementer_IncrementNumber_Handler,
		},
		{
			MethodName: "SetParams",
			Handler:    _Incrementer_SetParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "incrementer.proto",
}
